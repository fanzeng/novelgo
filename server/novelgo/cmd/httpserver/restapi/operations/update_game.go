// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateGameHandlerFunc turns a function with the right signature into a update game handler
type UpdateGameHandlerFunc func(UpdateGameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateGameHandlerFunc) Handle(params UpdateGameParams) middleware.Responder {
	return fn(params)
}

// UpdateGameHandler interface for that can handle valid update game params
type UpdateGameHandler interface {
	Handle(UpdateGameParams) middleware.Responder
}

// NewUpdateGame creates a new http.Handler for the update game operation
func NewUpdateGame(ctx *middleware.Context, handler UpdateGameHandler) *UpdateGame {
	return &UpdateGame{Context: ctx, Handler: handler}
}

/*
	UpdateGame swagger:route PUT /games/{gameId} updateGame

Update an existing game
*/
type UpdateGame struct {
	Context *middleware.Context
	Handler UpdateGameHandler
}

func (o *UpdateGame) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateGameParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
